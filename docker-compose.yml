# ZeroTouch Docker Compose 配置
# 用于本地开发和生产部署

version: '3.8'

services:
  # ZeroTouch 前端应用
  zerotouch-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: zerotouch-frontend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - zerotouch-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zerotouch.rule=Host(`zerotouch.localhost`)"
      - "traefik.http.services.zerotouch.loadbalancer.server.port=8080"

  # Nginx 反向代理（可选）
  nginx-proxy:
    image: nginx:alpine
    container_name: zerotouch-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf.example:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（如果有的话）
    depends_on:
      - zerotouch-app
    restart: unless-stopped
    networks:
      - zerotouch-network
    profiles:
      - proxy  # 使用 --profile proxy 启用

  # Redis 缓存（如果需要的话）
  redis:
    image: redis:7-alpine
    container_name: zerotouch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - zerotouch-network
    profiles:
      - cache  # 使用 --profile cache 启用

volumes:
  redis-data:
    driver: local

networks:
  zerotouch-network:
    driver: bridge
    name: zerotouch-net

# 使用示例:
# 基本启动: docker-compose up -d
# 带代理启动: docker-compose --profile proxy up -d
# 带缓存启动: docker-compose --profile cache up -d
# 完整启动: docker-compose --profile proxy --profile cache up -d